services:

  authorization-server:
    build: authorization-server
    mem_limit: 512m
    volumes:
      - ./logs:/usr/share/microservice/logs
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
      - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-O -", "-q", "http://localhost:9999/actuator/health" ]
      interval: 5s
      timeout: 2s
      retries: 60

  config-server:
    build: config-server
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,native
      - ENCRYPT_KEY=${CONFIG_SERVER_ENCRYPT_KEY}
      - SPRING_SECURITY_USER_NAME=${CONFIG_SERVER_USR}
      - SPRING_SECURITY_USER_PASSWORD=${CONFIG_SERVER_PWD}
    volumes:
      - $PWD/config-repo:/config-repo
      - ./logs:/usr/share/microservice/logs
    healthcheck:
      test: [ "CMD", "wget", "-O -", "-q", "http://localhost:8888/actuator/health" ]
      interval: 5s
      timeout: 2s
      retries: 60

  postgres:
    image: postgres:16.9
    container_name: review_my_cert_postgres_db
    environment:
      - POSTGRES_DB=review_my_cert_db
      - POSTGRES_USER=revMyCertAdmin
      - POSTGRES_PASSWORD=revMyCertAdmin
    hostname: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U revMyCertAdmin -d review_my_cert_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  certificate:
    build: certificate-service
    mem_limit: 512m
    volumes:
      - ./logs:/usr/share/microservice/logs
    hostname: certificate
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
      - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-O -", "-q", "http://localhost:9999/actuator/health" ]
      interval: 5s
      timeout: 2s
      retries: 60

  review:
    build: review-service
    mem_limit: 512m
    volumes:
      - ./logs:/usr/share/microservice/logs
    hostname: review
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
      - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-O -", "-q", "http://localhost:9999/actuator/health" ]
      interval: 5s
      timeout: 2s
      retries: 60

  company:
    build: company-service
    mem_limit: 512m
    volumes:
      - ./logs:/usr/share/microservice/logs
    hostname: company
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
      - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy


  gateway:
    build: gateway
    mem_limit: 512m
    volumes:
      - ./logs:/usr/share/microservice/logs
    hostname: gateway
    ports:
      - "8443:8443"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
      - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-O -", "-q", "http://localhost:8443/actuator/health" ]
      interval: 5s
      timeout: 2s
      retries: 60

  eureka:
    build: eureka-server
    mem_limit: 512m
    hostname: eureka
    volumes:
      - ./logs:/usr/share/microservice/logs
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
      - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-O -", "-q", "http://localhost:8761/actuator/health" ]
      interval: 5s
      timeout: 2s
      retries: 60

  zipkin:
    image: openzipkin/zipkin:3.5.1
    restart: always
    mem_limit: 1024m
    environment:
      - STORAGE_TYPE=mem
    ports:
      - 9411:9411



volumes:
  postgres_data:
